import { useEffect, useState } from "react";
import references from "@/utils/references";
import MainLayout from "@/components/layouts/mainLayout/MainLayout";
import Navbar from "@/components/navbar";
import Head from "next/head";
import Hero from "@/components/hero";
import Home_Page_TrackItem from "../components/home_page_trackItem";
import Home_Page_ArtistItem from "../components/home_page_artistItem";
import Home_Page_AlbumItem from "../components/home_page_albumItem";
import Home_Page_RadioItem from "../components/home_page_radioItem";
import { Inter } from "next/font/google";
import { useRouter } from "next/router";
import Image from "next/image";
import logo from "../../public/logo/cuffie.png";
import styles from "@/styles/Home.module.scss";
import deezer from "../../public/logo/deezer.png"

const inter = Inter({ subsets: ["latin"] });

export default function Home({ artistData, trackData, albumData, radioData }) {
  const [logged, setLogged] = useState(false);
  const [login, setLogin] = useState(false);
  const router = useRouter();
  const [isHome, setIsHome] = useState(true);
  const [userName, setUserName] = useState("");
  const [password, setPassword] = useState("");
  const [errorPopup, setErrorPopup] = useState(false);

  const refreshPage = () => {
    window.location.reload();
  };

  const onHandleHidePopup = () => {
    setErrorPopup(false);
  };

  const onHandleUsername = (e) => {
    setUserName(e.target.value);
  };

  const onHandlePassword = (e) => {
    setPassword(e.target.value);
  };

  const onHandleSubmit = (e) => {
    e.preventDefault();
    if (userName === references.username && password === references.password) {
      if (typeof window !== "undefined") {
        localStorage.setItem("logged", true);
      }
      refreshPage();
    } else {
      setErrorPopup(true);
    }
  };

  useEffect(() => {
    if (localStorage.getItem("logged") != null) {
      setLogged(true);
    }
  }, [login]);

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta
          name="author"
          content="Luisa Zizzo, Alessio Perez, Fabio Massi, Adriana Origlio, Ilenia Ingrassia"
        ></meta>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <MainLayout>
          <div className={styles.mainContainer}>
            <Navbar title={"Budz"} />
            <div className={styles.container}>
              <div className={styles.leftSide}>
                <Hero  />
                <section className={styles.artistListMobile}>
                  <h3 className={styles.titleTopArtist}>Top Artist</h3>
                  <div className={styles.listTopArtist}>
                    {artistData?.data.map((data, i) => (
                      <Home_Page_ArtistItem key={i} data={data} isHome={isHome}
                      />
                    ))}
                  </div>
                </section>
                <section className={styles.albumListMobile}>
                  <h3 className={styles.titleTopAlbum}>Top Albums</h3>
                  <div className={styles.listTopArtist}>
                    {albumData?.data.map((data, i) => (
                      <Home_Page_AlbumItem key={i} data={data} isHome={isHome}
                      />
                    ))}
                  </div>
                </section>
                <section>
                  <div className={styles.title}>
                    <h3 className={styles.titleTrending}>Trending right now</h3>
                  </div>
                  {!artistData ? (
                    <p>ciao</p>
                  ) : (
                    <div className={styles.listTrack}>
                      {trackData?.tracks.data.map((data, i) => (
                        <Home_Page_TrackItem
                          key={i}
                          data={data}
                          isHome={isHome}
                        />
                      ))}
                    </div>
                  )}
                </section>
              </div>
              <div className={styles.rightSide}>
                <section>
                  <div className={styles.title}>
                    <h3 className={styles.titleTopArtist}>Top Artist</h3>
                  </div>
                  <div className={styles.listTopArtist}>
                    {artistData?.data.map((data, i) => (
                      <Home_Page_ArtistItem
                        key={i}
                        data={data}
                        isHome={isHome}
                       
                      />
                    ))}
                  </div>
                </section>
                <section>
                  <div className={styles.title}>
                    <h3 className={styles.titleTopAlbum}>Top Albums</h3>
                  </div>
                  <div className={styles.listTopArtist}>
                    {albumData?.data.map((data, i) => (
                      <Home_Page_AlbumItem
                        key={i}
                        data={data}
                        isHome={isHome}
                        
                      />
                    ))}
                  </div>
                </section>
              </div>
            </div>
          </div>
        </MainLayout>
      </main>
      {!logged && (
        <div className={styles.login_container}>
          <div className={styles.login_overlay}></div>
          <div className={styles.login_box}>
            <div className={styles.header_login}>
              <div className={styles.container_logo}>
              <Image
                src={logo}
                alt={"logo.png"}
                width={120}
                height={100}
                className={styles.logo}
              />
              </div>
              <div className={styles.deezer_container}>
                <p className={styles.logo_title}>Powered by :</p>
                <Image
                  src={deezer}
                  width={120}
                  height={23}
                  alt={"logo_deezer"}
                  className={styles.deezer}
                />
              </div>
            </div>
            <div className={styles.body_login}>
              <h1>Welcome To Budz</h1>
              <p>The coolest audio streaming app on the planet</p>
              <div className={styles.container_form}>
                <form onSubmit={onHandleSubmit}>
                  <input
                    type="text"
                    placeholder="username"
                    onChange={onHandleUsername}
                    value={userName}
                    required
                  />
                  <input
                    type="password"
                    placeholder="password"
                    onChange={onHandlePassword}
                    value={password}
                    required
                  />
                  <input
                    type="submit"
                    value="login"
                    className={styles.input_login}
                  />
                </form>
              </div>
              <p className={styles.info1}>
                Sign up to get unlimited songs and podcasts with occasional ads.
                No credit card needed. Sign up free
              </p>
            </div>
            <div className={styles.footer_login}>
              <p className={styles.info2}>
                Your privacy and the security of your personal data are, and
                always will be, our highest priority. That’s why we’ve created a
                Privacy Center to highlight some of the important sections of
                our Privacy Policy and to give you more info about the rights
                and controls you have in relation to your personal data. For
                more info about your data rights, and the privacy settings
                available to you, see our FAQ.
              </p>
            </div>
            
          </div>
          {errorPopup && (
              <div className={styles.popup_container}>
                <div className={styles.popup_overlay} onClick={onHandleHidePopup}></div>
                <div className={styles.popup_error}>
                  <p className={styles.close_error} onClick={onHandleHidePopup}>x</p>
                  <p >Wrong Username or Password, please try again</p>
                </div>
              </div>
            )}
        </div>
      )}
    </>
  );
}

export async function getStaticProps() {
  const resArtist = await fetch("https://api.deezer.com/chart/0/artists");
  const resTracks = await fetch("https://api.deezer.com/chart");
  const resAlbum = await fetch("https://api.deezer.com/chart/0/albums");
  const resRadio = await fetch("https://api.deezer.com/radio/genres");

  const artistData = await resArtist.json();
  const trackData = await resTracks.json();
  const albumData = await resAlbum.json();
  const radioData = await resRadio.json();

  return { props: { artistData, trackData, albumData, radioData } };
}
